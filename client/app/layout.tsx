'use client'
import './global.css';
import './styles/style.scss';

import { Provider } from "react-redux";
import { store } from './reducers/store';
import { ApolloProvider, InMemoryCache, ApolloClient } from '@apollo/client';
import { usePathname } from 'next/navigation';
import { ROUTE } from './constants/route.constant';
import { Layout } from './component/layout/layout';
import {ThemeProvider as NextThemesProvider} from 'next-themes';
import {createTheme, NextUIProvider} from '@nextui-org/react';
import { DARK_COLORS, LIGHT_COLORS } from './component/layout/theme.colors';
import { Suspense } from 'react';

// import App from './app/app';
// import {persistor, store} from './reducers/store';

const lightTheme = createTheme({
  type: 'light',
  theme: {
     colors: LIGHT_COLORS,
  },
});

const darkTheme = createTheme({
  type: 'dark',
  theme: {
     colors: DARK_COLORS,
  },
});


const client = new ApolloClient({
  cache: new InMemoryCache(),
  uri: `${process.env.SERVER_URL}graphql` //'http://localhost:3000/graphql',
});


// const metadata = {
  //   title: 'Welcome to client',
  //   description: 'Generated by create-nx-workspace',
// };

export default function RootLayout({
  children
}: {
  children: React.ReactNode;
}) {
  const pathName = usePathname()

  const NextUIProviderX = ()=>(
    <NextThemesProvider
         defaultTheme="system"
         attribute="class"
         value={{
            light: lightTheme.className,
            dark: darkTheme.className,
         }}
      >
         <NextUIProvider>
         {children ?
            <Suspense fallback={<p>Loading....</p>}>
              <Layout>
                {children}
              </Layout>
            </Suspense> : 
            <p>Loading....</p>}
         </NextUIProvider>
      </NextThemesProvider>
  )

  return (
    <html lang="en">
      <body>
      <ApolloProvider client={client}>
        <Provider store={store}>
            { (pathName.includes(ROUTE.LOGIN) || pathName.includes(ROUTE.SIGNUP) || pathName.includes(ROUTE.VIEWER)) ? 
              children : 
              <NextUIProviderX></NextUIProviderX>
            }
        </Provider>
        </ApolloProvider>
      </body>
    </html>
  );
}
