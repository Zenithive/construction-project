# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CreateFolderInput {
  folderId: String
  folderName: String!
  orgId: String!
  orginatorId: String!
  parentFolderId: String!
  projectId: String!
  status: String = "Active"
}

input CreateNewPermission {
  createdBy: DateTime! = "2024-04-29T13:20:24.754Z"
  orginatorId: String!
  permissionId: String!
  permissionKey: String!
  permissionLabel: String!
  projId: String!
  updatedBy: DateTime! = "2024-04-29T13:20:24.754Z"
  value: Boolean!
}

input CreateNewRole {
  isDefaultRole: Boolean = false
  orgId: String
  orginatorId: String!
  projId: String!
  roleId: String!
  roleName: String!
  users: [String!] = []
}

input CreateOrgInput {
  contact: String!
  creationDate: DateTime! = "2024-04-29T13:20:23.863Z"
  orgId: String!
  orgName: String!
  region: String!
  status: String! = "Open"
  updatedDate: DateTime! = "2024-04-29T13:20:23.863Z"
  website: String
}

input CreateProjectInput {
  orgId: String!
  orgName: String!
  orginatorId: String!
  projId: String!
  projName: String!
  region: String!
  status: String!
  website: String
}

input CreateUserByAdmin {
  creationDate: DateTime! = "2024-04-29T13:20:19.629Z"
  email: String
  emailVerified: Boolean! = false
  firstName: String
  isPasswordReset: Boolean! = true
  lastName: String
  password: String! = ""
  phoneNo: String
  status: String! = "Active"
  subscriptionId: Float = 1
  updatedDate: DateTime! = "2024-04-29T13:20:19.629Z"
  userId: String!
}

input CreateUserInput {
  creationDate: DateTime! = "2024-04-29T13:20:19.628Z"
  email: String!
  emailVerified: Boolean! = false
  firstName: String
  isPasswordReset: Boolean! = false
  lastName: String
  password: String!
  phoneNo: String = ""
  status: String = "Active"
  subscriptionId: Float! = 1
  updatedDate: DateTime! = "2024-04-29T13:20:19.629Z"
  userId: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DeleteFileInput {
  fileId: String!
}

input DeleteOrganisationInput {
  orgId: String!
}

input DeleteProjectInput {
  projId: String!
}

input DeleteRoleInput {
  roleId: String!
}

input DeleteUserInput {
  userId: String!
}

input EditUserByAdmin {
  email: String
  emailVerified: Boolean! = false
  firstName: String
  isPasswordReset: Boolean! = true
  lastName: String
  password: String! = ""
  phoneNo: String
  status: String! = "Active"
  subscriptionId: Float = 1
  updatedDate: DateTime! = "2024-04-29T13:20:19.629Z"
  userId: String!
}

input Email {
  email: String!
}

type File {
  apsObjKey: String
  apsUrnKey: String!
  docRef: String!
  extension: String!
  fileId: String
  fileName: String!
  folderId: String!
  orginatorId: String!
  originalname: String!
  path: String!
  projectId: String!
  revision: Float!
  revisionId: String
  size: Float!
  status: String!
  userId: String!
  zipEntryPoint: String!
}

type Folder {
  folderId: String
  folderName: String!
  orgId: String!
  orginatorId: String!
  parentFolderId: String!
  projectId: String!
  status: String!
}

input GetRolesByProjId {
  projId: String!
}

input GetSingleFileInput {
  urn: String!
}

input LoginInput {
  email: String
  password: String
}

type Message {
  message: String!
}

type Mutation {
  createNewFolder(input: CreateFolderInput!): Folder!
  createNewRole(input: CreateNewRole!): Role!
  createOrg(input: CreateOrgInput!): Org!
  createProject(input: CreateProjectInput!): Project!
  createUser(input: CreateUserInput!): User!
  createUserByAdmin(input: CreateUserByAdmin!): User!
  deleteFile(input: DeleteFileInput!): File!
  deleteOrganisation(input: DeleteOrganisationInput!): Org!
  deleteProject(input: DeleteProjectInput!): Project!
  deleteUser(input: DeleteUserInput!): User!
  deleterole(input: DeleteRoleInput!): Role!
  editOrg(input: UpdateOrgInput!): Org!
  editUser(input: EditUserByAdmin!): User!
  loginUser(input: LoginInput!): Token!
  updateRole(input: UpdateRoleInput!): Role!
  updateUpermissions(input: CreateNewPermission!): Permission!
  updateUser(input: UpdateUserInput!): User!
  uploadFile(input: UploadFileInput!): File!
}

type Org {
  contact: String!
  creationDate: DateTime!
  orgId: String
  orgName: String
  region: String!
  status: String!
  updatedDate: DateTime!
  website: String!
}

input PaginationInput {
  currentPage: Float!
  pageSize: Float!
}

input PaginationInputF {
  currentPage: Float!
  folderId: String!
  pageSize: Float!
}

input PaginationInputs {
  currentPage: Float!
  pageSize: Float!
}

input PaginationInputss {
  currentPage: Float!
  pageSize: Float!
}

type PaginationResult {
  currentPage: Int!
  projects: [Project!]!
  totalPages: Int!
  totalProjects: Int!
}

type PaginationResultF {
  currentPage: Int!
  files: [File!]!
  totalFiles: Int!
  totalPages: Int!
}

type PaginationResults {
  currentPage: Int!
  totalPages: Int!
  totalUsers: Int!
  users: [User!]!
}

type PaginationResultss {
  currentPage: Int!
  orgs: [Org!]!
  totalOrgs: Int!
  totalPages: Int!
}

type Permission {
  createdBy: DateTime!
  orginatorId: String!
  permissionId: String!
  permissionKey: String!
  permissionLabel: String!
  projId: String!
  updatedBy: DateTime!
  value: Boolean!
}

type Project {
  orgId: String
  orgName: String
  orginatorId: String!
  projId: String!
  projName: String!
  region: String!
  status: String!
  website: String!
}

type Query {
  getAllOrg(input: PaginationInputss!): PaginationResultss!
  getFileByFolderId(input: PaginationInputF!): PaginationResultF!
  getFiles: [File!]!
  getFolders: [Folder!]!
  getOneFile(input: GetSingleFileInput!): File!
  getPermissions: [Permission!]!
  getProjects(input: PaginationInput!): PaginationResult!
  getRoles(input: GetRolesByProjId!): [Role!]!
  getUser(input: UserId!): User!
  getUserByEmail(input: Email!): User!
  getUsers(input: PaginationInputs!): PaginationResults!
  logout: Message!
  securedResource: String!
}

type ReturnUserObj {
  email: String!
  firstName: String!
  lastName: String!
  userId: String!
}

type Role {
  isDefaultRole: Boolean
  orgId: String!
  orginatorId: String!
  projId: String!
  roleId: String!
  roleName: String!
  users: [String!]
}

type Token {
  token: String!
  userObj: ReturnUserObj!
}

input UpdateOrgInput {
  contact: String!
  creationDate: DateTime! = "2024-04-29T13:20:23.863Z"
  orgId: String!
  orgName: String!
  region: String!
  status: String! = "Open"
  updatedDate: DateTime! = "2024-04-29T13:20:23.863Z"
  website: String
}

input UpdateRoleInput {
  roleId: String!
  users: [String!]!
}

input UpdateUserInput {
  _id: String!
  email: String
  endDate: DateTime
  firstName: String
  lastName: String
  password: String
  startDate: DateTime
  status: String
}

input UploadFileInput {
  apsObjKey: String
  apsUrnKey: String
  docRef: String!
  extension: String!
  fileId: String
  fileName: String!
  folderId: String!
  orginatorId: String!
  originalname: String!
  path: String!
  projectId: String!
  revision: String!
  revisionId: String
  size: Float!
  status: String!
  userId: String!
  zipEntryPoint: String
}

type User {
  creationDate: DateTime!
  email: String!
  emailVerified: Boolean!
  firstName: String!
  isPasswordReset: Boolean!
  lastName: String!
  password: String!
  phoneNo: String!
  status: String!
  subscriptionId: Float!
  updatedDate: DateTime!
  userId: String!
}

input UserId {
  _id: String!
}